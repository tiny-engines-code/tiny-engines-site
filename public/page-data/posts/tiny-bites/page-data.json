{
    "componentChunkName": "component---src-pages-posts-mdx-slug-js",
    "path": "/posts/tiny-bites/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"My Second Post","date":"July 23, 2021","hero_image_alt":"A gray pitbull relaxing on the sidewalk with its tongue hanging out","hero_image_credit_link":"https://unsplash.com/photos/ocZ-_Y7-Ptg","hero_image_credit_text":"Christopher Ayme","hero_image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#888888","images":{"fallback":{"src":"/static/84616a8e5fb784f23174f0d152e96949/d8446/vwbus.jpg","srcSet":"/static/84616a8e5fb784f23174f0d152e96949/6c83b/vwbus.jpg 984w,\n/static/84616a8e5fb784f23174f0d152e96949/dc678/vwbus.jpg 1969w,\n/static/84616a8e5fb784f23174f0d152e96949/d8446/vwbus.jpg 3937w","sizes":"(min-width: 3937px) 3937px, 100vw"},"sources":[{"srcSet":"/static/84616a8e5fb784f23174f0d152e96949/e3702/vwbus.webp 984w,\n/static/84616a8e5fb784f23174f0d152e96949/59599/vwbus.webp 1969w,\n/static/84616a8e5fb784f23174f0d152e96949/3df0e/vwbus.webp 3937w","type":"image/webp","sizes":"(min-width: 3937px) 3937px, 100vw"}]},"width":3937,"height":3063}}}},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"My Second Post\",\n  \"slug\": \"my-second-post\",\n  \"date\": \"2021-07-23T00:00:00.000Z\",\n  \"hero_image\": \"vwbus.jpg\",\n  \"hero_image_alt\": \"A gray pitbull relaxing on the sidewalk with its tongue hanging out\",\n  \"hero_image_credit_text\": \"Christopher Ayme\",\n  \"hero_image_credit_link\": \"https://unsplash.com/photos/ocZ-_Y7-Ptg\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Premise\"), mdx(\"p\", null, \"The prerequisite here is understanding of and experience with unit testing in general\"), mdx(\"p\", null, \"The focus of the unit test is to put small component of code \", \"(\", \"the unit\", \")\", \" under test.  The value is that each unit of code has its own contract with the rest of the code base.\"), mdx(\"p\", null, \"Over time the definition if unit testing in business settings has not changed, but its usage and value has blurred a bit.  Originally the  idea was that we would build highly reusable components that could be re-usable anywhere in the code.  And unit testing was the key instrument that could guarantee those min-contracts\"), mdx(\"p\", null, \"Honestly in many business environments the time and organization to make that happen has never really been a top priority.  It takes a lot of time and effort and constraint to gain the level of maturity required to do it consistently, and in most business settings the value-versus-cost just isn't there.\"), mdx(\"p\", null, \"Unit testing is still vitally important but\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"we'll sometimes see the lines between unit testing and other testing \", \"(\", \"integration, functional\", \")\", \" begin to blur a bit.  You'll hear some developers say that integration and functional testing is \\\"more important\\\" and It's easy to see what they would think that way\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unit testing should not be a silo, where we write unit tests for our code without thinking through those tests as a part of an overall plan.  We do not want to be in the position where the engineer creating a functional test assumes that some scenario \\\"should have\\\" been covered in unit testing\")), mdx(\"p\", null, \"So then, practically speaking, what is unit testing?  It's still our only change to verify that each unit under test can predictably handle whatever input we throw at it.   At this point we should not make assumptions about the business scenario.  I've heard some engineers say \\\"we don't need to test that because it will never happen\\\".   That's logical in a business context, but code changes over time and unless we can show that we have guardrails in place to guarantee that at some future point in time the scenario that will never happen we should not make that assumption.\"), mdx(\"p\", null, \"Unit tests are\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"not relatively expensive to create\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"part of what separates a hacker from a professional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"part of what separates a good solution from a bad solution\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"first class citizens - a decent set of unit tests can take longer than it took to write the component under test.  Plan for them and don't rush through them during build or in PR review\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"2db3cb25-ceef-51b1-937e-50afc362c3f4","slug":"tiny-bites/","__params":{"slug":"tiny-bites"}}},
    "staticQueryHashes": []}